version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: trello-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: trello
      MYSQL_USER: trello_user
      MYSQL_PASSWORD: trello_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - trello-network
    command: --default-authentication-plugin=mysql_native_password

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: trello-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root123
      MYSQL_ROOT_PASSWORD: root123
    depends_on:
      - mysql
    networks:
      - trello-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: trello-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: trello_mvp
      DB_USER: trello_user
      DB_PASSWORD: trello_pass
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRE: 7d
    depends_on:
      - mysql
    volumes:
      - ./server/src:/src
      - /src/node_modules
    networks:
      - trello-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: trello-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    depends_on:
      - server
    volumes:
      - ./client/app:/app
      - /app/node_modules
    networks:
      - trello-network
    stdin_open: true
    tty: true

volumes:
  mysql-data:

networks:
  trello-network:
    driver: bridge